package com.example.flipcard

import androidx.compose.animation.animateColorAsState
import androidx.compose.animation.core.animateFloatAsState
import androidx.compose.animation.core.tween
import androidx.compose.foundation.BorderStroke
import androidx.compose.foundation.clickable
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.size
import androidx.compose.material.Card
import androidx.compose.material.Surface
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.graphics.graphicsLayer
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import com.example.flipcard.ui.theme.FlipCardTheme

@Composable
fun SimpleCard() {
    val timeDuration = 5000
    var rotated by remember { mutableStateOf(false) }
    val rotation by animateFloatAsState(
        targetValue = if (rotated) 180f else 0f,
        animationSpec = tween(timeDuration)
    )
    val animationColor by animateColorAsState(
        targetValue = if (rotated) Color.Red else Color.Blue,
        animationSpec = tween(timeDuration)
    )

    Box(Modifier.fillMaxSize(), contentAlignment = Alignment.Center) {
        Card(
            Modifier
                .size(220.dp, 360.dp)
                .graphicsLayer {
                    rotationY = rotation
                }
                .clickable {
                    rotated = !rotated
                },
            border = BorderStroke(2.dp, animationColor)
        ) {

        }
    }
}

@Preview(showBackground = true)
@Composable
fun TestPreview() {
    FlipCardTheme {
        SimpleCard()
    }
}
